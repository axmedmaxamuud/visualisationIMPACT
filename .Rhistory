grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max , sens.boxplot = "vertical")
devtools::document()
devtools::load_all()
devtools::document()
scale_fill_reach_categorical<-function(n,name="",...){
structure(list(
scale_fill_manual(values= reach_style_color_categorical(n),name=name,...)
))
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max , sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max , sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
devtools::load_all()
rm(grouped_barchart_impact)
rm(grouped_barchart_impact)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
#' @param result_percent: data.frame of two column where the first is the values of the independent var and the second column is the average associated to the indepedent variable value
#' @param infimum_error (optional): column name (without quotes) of .data containing value of the lower limit for the error bars
#' @param supremum_error (optional): column name (without quotes) of .data containing value of the upper limit for the error bars
#' @param sens.barchart (optional): if sens.barchart = "vertical" (default) boxplots are build with vertical cartesian coordinates. If sens.barchart="horizontal" flip cartesian coordinates so that vertical becomes horizontal
#' @param percent (optional): logical parameter. Default value is FALSE. If TRUE, y values are written as percentages
#' @details
#' @return
#' @examples
#' @export
#'
grouped_barchart_impact <- function(.data, x , subset.x , y,
infimum_error=NULL, supremum_error=NULL, sens.barchart="vertical", percent = FALSE ){
x <- enquo(x)
subset.x <- enquo(subset.x)
y <- enquo(y)
infimum_error <- enquo(infimum_error)
supremum_error <- enquo(supremum_error)
# Check and return message if empty evironnement
stop_msg <- error_message_empty_env_barchart( x, subset.x, y, infimum_error, supremum_error)
if(stop_msg != ""){
stop(paste0("The variable(s) following does not exist in .data: ",stop_msg))
}
if(sens.barchart != "vertical" & sens.barchart != "horizontal"){
stop("Please enter a valid value to the parameter sens.barchart: 'vertical' or 'horizontal'")
}
if(percent != TRUE & percent != FALSE){
stop("Please enter a valid value to the parameter percent: TRUE or FALSE")
}
theplot<-ggplot(.data,aes(x=!!x,y=!!y,fill=!!subset.x))+
geom_bar(stat = "identity",position='dodge')+theme_impact()+xlab(NULL)+ylab(NULL)+
scale_fill_reach(n=nrow(dplyr::distinct(.data,!!y)),name="")
if (quo_is_null(infimum_error) | quo_is_null(supremum_error)) {
warning("Could not find the min or max column. None Error bars will be added to the barchart")
}
else{
theplot <- theplot + geom_errorbar( aes(x=!!x,
ymin=as.numeric(!!infimum_error),
ymax=as.numeric(!!supremum_error)),
position=position_dodge(width=0.9),
stat='identity',width=.1)+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
if(percent == TRUE){
theplot <- add_percent_format(theplot)
}
if(sens.barchart=="horizontal"){
theplot <- theplot + coord_flip()
}
return(theplot)
}
x<-5
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
library("visualisationIMPACT")
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
debug(grouped_barchart_impact)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
devtools::document()
devtools::build()
devtools::install()
devtools::build()
devtools::build()
devtools::install()
devtools::build()
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
devtools::install()
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(5,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,NA,70, 5, NA, NA, 10, 5)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 300)
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(5,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,NA,70, 5, NA, NA, 10, 5)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 300)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
scale_fill_reach_categorical<-function(n,name="",...){
structure(list(
scale_fill_manual(values= reach_style_color_categorical(n),name=name,...)
))
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
reach_style_color_categorical<-function(n){
m<-4
cols<-colorRampPalette(c(reach_style_color_darkgreys()[3],
reach_style_color_reds()[1],
reach_style_color_beiges()[1],
reach_style_color_lightgreys()[2]
# reach_style_color_re()[3]
))(n)
# .show_colors(cols)
# colorder<-sapply(1:(n/m),function(x){x+(c(0:(m-1))*n/m)}) %>% as.vector %>% rank
# cols<-cols[colorder[1:length(cols)]]
# .show_colors(cols)
cols
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
categorical_col_order<-function(n){
orders<-list(
1,
c(1:2),
c(1:3),
c(1:4)
)
}
scale_color_discrete_reach <- function(color='red'){
structure(list(
scale_color_manual(values= get(paste0('reach_style_color_',color,'s'))())
))
}
scale_color_continuous_reachn <- function(color='red'){
structure(list(
scale_color_gradientn(colours = get(paste0('reach_style_color_',color,'s'))())
))
}
.show_colors<-function(cols){
plot(1:length(cols),1:length(cols),cex=20,pch=20,col=cols,axes=FALSE)
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
# INDIVIDUAL COLORS
#' Reach brand reds
#'
reach_style_color_red<-function(lightness=1){
if      (lightness==1){rgb(238/255,88/255,89/255)}
else if (lightness==2){rgb(238/255,88/255,89/255,0.5)}
else if (lightness==3){rgb(238/255,88/255,89/255,0.3)}
}
#' Reach brand dark greys
#'
#'
#'
reach_style_color_darkgrey<-function(lightness=1){
if      (lightness==1){rgb(88/255,88/255,90/255)}
else if (lightness==2){rgb(88/255,88/255,90/255,0.5)}
else if (lightness==3){rgb(88/255,88/255,90/255,0.3)}
}
#' reach brand light greys
#'
#'
#'
reach_style_color_lightgrey<-function(lightness=1){
if      (lightness==1){rgb(209/255,211/255,212/255)}
else if (lightness==2){rgb(209/255,211/255,212/255,0.5)}
else if (lightness==3){rgb(209/255,211/255,212/255,0.3)}
}
#' reach brand beiges
#'
#'
reach_style_color_beige<-function(lightness=1){
if      (lightness==1){rgb(210/255,203/255,184/255)}
else if (lightness==2){rgb(210/255,203/255,184/255,0.5)}
else if (lightness==3){rgb(210/255,203/255,184/255,0.3)}
}
# COLOUR TRIPLES
#' Reach brand reds triples
#'
#'
#'
#'
#'
reach_style_color_reds<-function(){
vapply(1:3,FUN.VALUE = vector(mode = 'character',length = 1),reach_style_color_red)
}
# COLOUR TRIPLES
#' Reach brand dark grey triples
#'
#'
#'
#'
#'
reach_style_color_darkgreys<-function(){
vapply(1:3,FUN.VALUE = vector(mode = 'character',length = 1),reach_style_color_darkgrey)
}
# COLOUR TRIPLES
#' Reach brand light greys triples
#'
#'
#'
reach_style_color_lightgreys<-function(){
vapply(1:3,FUN.VALUE = vector(mode = 'character',length = 1),reach_style_color_lightgrey)
}
# COLOUR TRIPLES
#' Reach brand beige triples
#'
#'
#'
reach_style_color_beiges<-function(){
vapply(1:3,FUN.VALUE = vector(mode = 'character',length = 1),reach_style_color_beige)
}
reach_style_color_rainbow<-function(n){
cols<-c(rev(reach_style_color_darkgreys()[1]),(reach_style_color_reds()[3]),rev(reach_style_color_beiges()[1]))
# cols<-rep(cols,ceiling(n/12))[1:3]
colorRampPalette(cols)(n)
}
reach_style_color_rainbow<-function(n){
cols<-c(rev(reach_style_color_darkgreys()[1]),(reach_style_color_reds()[3]),rev(reach_style_color_beiges()[1]))
# cols<-rep(cols,ceiling(n/12))[1:3]
colorRampPalette(cols)(n)
}
# GGPLOT GRADIENTS
scale_fill_reach <- function(color=NULL,name="",...){
if(is.null(color)){
}else{
structure(list(
scale_fill_manual(values= get(paste0('reach_style_color_',color,'s'))(),name=name,...)
))}
}
scale_fill_reach_categorical<-function(n,name="",...){
structure(list(
scale_fill_manual(values= reach_style_color_categorical(n),name=name,...)
))
}
reach_style_color_categorical<-function(n){
m<-4
cols<-colorRampPalette(c(reach_style_color_darkgreys()[3],
reach_style_color_reds()[1],
reach_style_color_beiges()[1],
reach_style_color_lightgreys()[2]
# reach_style_color_re()[3]
))(n)
# .show_colors(cols)
# colorder<-sapply(1:(n/m),function(x){x+(c(0:(m-1))*n/m)}) %>% as.vector %>% rank
# cols<-cols[colorder[1:length(cols)]]
# .show_colors(cols)
cols
}
categorical_col_order<-function(n){
orders<-list(
1,
c(1:2),
c(1:3),
c(1:4)
)
}
scale_color_discrete_reach <- function(color='red'){
structure(list(
scale_color_manual(values= get(paste0('reach_style_color_',color,'s'))())
))
}
scale_color_continuous_reachn <- function(color='red'){
structure(list(
scale_color_gradientn(colours = get(paste0('reach_style_color_',color,'s'))())
))
}
.show_colors<-function(cols){
plot(1:length(cols),1:length(cols),cex=20,pch=20,col=cols,axes=FALSE)
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
#' Create a barchart for average
#'
#' @param .data: dataframe that contains the result for the barchart
#' @param independent.var.value: column of the dataframe .data thta contains the different values of the categorical data
#' @param max_nbr_var: integer for the maximum number of variable that fit on a vertical graph
#' @param size_max_label integer for the maximum number of character of a label
#' @details Searches for ....
#' @return a ggplot object
#' @examples  ...
#' @export
sens_barchart <- function(.data, independent.var, max_nbr_var, size_max_label ){
independent.var <- enquo(independent.var)
##Checks
if( check_empty_env(independent.var) == TRUE){ stop("The expression of the parameter independent.var does not exist in .data") }
if(type_of(max_nbr_var) != "double"){ stop("Please enter a valid value to max_nbr_var parameter (integer)")}
if( as.integer(max_nbr_var) != max_nbr_var){ stop("Please enter a valid number for max_nbr_var parameter")}
if(type_of(size_max_label) != "double"){ stop("Please enter a valid value to size_max_label parameter (integer)")}
if( as.integer(size_max_label) != size_max_label){ stop("Please enter a valid number for size_max_label parameter")}
independent.var.value <- dplyr::select(.data, !!independent.var)
nbre_bars <- nrow(independent.var.value)
name_var <- names(independent.var.value)
list_size_char_label <- nchar(levels(independent.var.value[[name_var]]))  ## to change
list_logical_size <- lapply(list_size_char_label, function(x){if(x > size_max_label) return(TRUE) else return(FALSE)} ) ##nbre de caractere difini en fonction taille output
if(nbre_bars > max_nbr_var || TRUE %in% list_logical_size ){
#nbre doit dependre de la taille du output par exemple
sens_barchart <- "horizontal"
}
else{
sens_barchart <- "vertical"
}
return(sens_barchart)
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
#' @param independent.var.value
#' @param dependent.var.value
#' @param result_percent: data.frame of two column where the first is the values of the independent var and the second column is the average associated to the indepedent variable value
#' @param result_min optional:
#' @param result_max optional:
#' @param save.file optional:
#' @param ... Other arguments passed on to the ggsave function
#' @details
#' @return
#' @examples
theme_impact <- function(){
family_font <- windowsFonts(Times=windowsFont("Arial Narrow"))
style <- theme(text=element_text(family=family_font$Times, colour='black'))
style <- style + ggthemes::theme_tufte() + theme(plot.title = element_text(family = family_font$Times,
colour = reach_style_color_darkgrey(),
size = 18,
face = 'bold',
hjust = 0.5  ))
return(style)
}
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
## Create a ggplot
theplot <- ggplot(.data, aes(1)) + geom_boxplot(aes( x = !!x,
lower = !!first_quantile,
upper = !!third_quantile,
middle = !!median,
ymin = !!whisker_min,
ymax = !!whisker_max,
colour = !!subset.x ),
stat = "identity" , fill= reach_style_color_lightgrey()) +
xlab("")+ylab(name.y) + theme_impact() + scale_fill_reach_categorical(n=nrow(dplyr::distinct(.data,!!subset.x)),name="")
scale_fill_reach_categorical(n=nrow(dplyr::distinct(.data,!!subset.x)),name="")
debug(grouped_boxplot_impact)
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
x <- enquo(x)
subset.x <- enquo(subset.x)
median <- enquo(median)
first_quantile <- enquo(first_quantile)
third_quantile <- enquo(third_quantile)
whisker_min <- enquo(whisker_min)
whisker_max <- enquo(whisker_max)
outlier_min <- enquo(outlier_min)
outlier_max <- enquo(outlier_max)
theplot <- ggplot(.data, aes(1)) + geom_boxplot(aes( x = !!x,
lower = !!first_quantile,
upper = !!third_quantile,
middle = !!median,
ymin = !!whisker_min,
ymax = !!whisker_max,
colour = !!subset.x ),
stat = "identity" , fill= reach_style_color_lightgrey()) +
xlab("")+ylab(name.y) + theme_impact()
theplot + scale_fill_reach_categorical(n=nrow(dplyr::distinct(.data,!!subset.x)),name="")
scale_fill_reach_categorical(n=nrow(dplyr::distinct(.data,!!subset.x)),name="")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- c(5,30,90, 10) - 1.5
max_value <- c(30,70, 130,50) + 50
outliers_min <- c(1,NA,70, 5)
outliers_max <- c(NA,150, 200,120)
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
theplot + ggtitle("example barchart average")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
theplot + ggtitle("example barchart average")
library(RColorBrewer)
ggplot(airquality_trimmed, aes(x = Month, y = Ozone, fill = Temp.f)) +
geom_boxplot(alpha=0.7) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175))
airquality_trimmed <- airquality[which(airquality$Month == "Jul" |
airquality$Month == "Aug" |
airquality$Month == "Sep"), ]
airquality_trimmed$Temp.f <- factor(ifelse(airquality_trimmed$Temp > mean(airquality_trimmed$Temp), 1, 0),
labels = c("Low temp", "High temp"))
airquality_trimmed$Temp.f <- factor(ifelse(airquality_trimmed$Temp > mean(airquality_trimmed$Temp), 1, 0),
labels = c("Low temp", "High temp"))
ggplot(airquality_trimmed, aes(x = Month, y = Ozone, fill = Temp.f)) +
geom_boxplot(alpha=0.7) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(5,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,NA,70, 5, NA, NA, 10, 5)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 300)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(5,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,NA,70, 5, NA, NA, 10, 5)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 300)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
library(RColorBrewer)
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical") + scale_fill_brewer(palette = "Accent")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(5,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,NA,70, 5, NA, NA, 10, 5)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 300)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
+ scale_fill_brewer(palette = "Accent")
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")+scale_fill_brewer()
test<-grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "vertical")
test+scale_fill_brewer()
test+scale_x_continuous()
test+scale_x_discrete()
test+scale_x_discrete(breaks=c("yes"="red","no"="green"))
