}
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 20,size_max_label = 60 )
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
ggsave(paste0(as.character(i),"plot.jpg"))
}
debug(barchart_impact)
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
i=5
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 20,size_max_label = 60 )
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
x <- enquo(x)
y<-enquo(y)
infimum_error <- enquo(infimum_error)
supremum_error<-enquo(supremum_error)
# Check and return message if empty evironnement
stop_msg <- error_message_empty_env_barchart( x,subset.x = NULL, y, infimum_error, supremum_error)
if(stop_msg != ""){
stop(paste0("The variable(s) following does not exist in .data: ",stop_msg))
}
if(sens.barchart != "vertical" & sens.barchart != "horizontal"){
stop("Please enter a valid value to the parameter sens.barchart: 'vertical' or 'horizontal'")
}
if(percent != TRUE & percent != FALSE){
stop("Please enter a valid value to the parameter percent: TRUE or FALSE")
}
# No percentages > 100
if(percent == TRUE & TRUE %in% (rlang::eval_tidy(y,.data)*scale.percent > 100) ){
stop("One of the percentages given is greater than 100 %. Please enter valid numbers.")
}
#Scale percentages can be either 1 or 100
if(scale.percent != 1 & scale.percent != 100){
stop("Parameter scale.percent is not value. Has to be egal to 1 or 100")
}
angle <- 90
theplot <-  ggplot(.data, aes(x = !!x , y = (!!y)*scale.percent )) + geom_bar_impact() + xlab("") + ylab(rlang::get_expr(y)) + theme_impact()
if(sens.barchart == "horizontal"){
theplot <- theplot + coord_flip()
angle <- 0
}
if (rlang::quo_is_null(infimum_error) | rlang::quo_is_null(supremum_error)) {
warning("Could not find the min or max column. No error bars will be added to the barchart")
}
else{
# Check cut error bar if less than 0
lapply(rlang::eval_tidy(infimum_error, .data), function(x)if(x < 0){x = 0}else{x = x })
lapply(rlang::eval_tidy(supremum_error, .data), function(x)if(x < 0){x = 0}else{x = x })
# Add error bar to the plot
theplot <- errorbar_impact(theplot, measure = x,
lower_limit = infimum_error,
upper_limit = supremum_error,
text_angle = angle)
}
eval_tidy(infimum_error, .data)
rlang::eval_tidy(infimum_error, .data)
lapply(rlang::eval_tidy(infimum_error, .data), function(x)if(x < 0){x = 0}else{x = x })
rlang::eval_tidy(infimum_error, .data) <- lapply(rlang::eval_tidy(infimum_error, .data), function(x)if(x < 0){x = 0}else{x = x })
list <- rlang::eval_tidy(infimum_error, .data)
list
lapply(list, function(x)if(x < 0){x = 0}else{x = x })
list
list <- lapply(list, function(x)if(x < 0){x = 0}else{x = x })
list
rlang::eval_tidy(infimum_error, .data) <- list
rlang::eval_tidy(infimum_error, .data) = list
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
for(i in c(5:8,20:25)){ i=5
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 20,size_max_label = 60 )
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
ggsave(paste0(as.character(i),"plot.jpg"))
}
i=5
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 20,size_max_label = 60 )
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
debug(barchart_impact)
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
x <- enquo(x)
y<-enquo(y)
infimum_error <- enquo(infimum_error)
supremum_error<-enquo(supremum_error)
# Check and return message if empty evironnement
stop_msg <- error_message_empty_env_barchart( x,subset.x = NULL, y, infimum_error, supremum_error)
if(stop_msg != ""){
stop(paste0("The variable(s) following does not exist in .data: ",stop_msg))
}
if(sens.barchart != "vertical" & sens.barchart != "horizontal"){
stop("Please enter a valid value to the parameter sens.barchart: 'vertical' or 'horizontal'")
}
if(percent != TRUE & percent != FALSE){
stop("Please enter a valid value to the parameter percent: TRUE or FALSE")
}
# No percentages > 100
if(percent == TRUE & TRUE %in% (rlang::eval_tidy(y,.data)*scale.percent > 100) ){
stop("One of the percentages given is greater than 100 %. Please enter valid numbers.")
}
#Scale percentages can be either 1 or 100
if(scale.percent != 1 & scale.percent != 100){
stop("Parameter scale.percent is not value. Has to be egal to 1 or 100")
}
angle <- 90
theplot <-  ggplot(.data, aes(x = !!x , y = (!!y)*scale.percent )) + geom_bar_impact() + xlab("") + ylab(rlang::get_expr(y)) + theme_impact()
if(sens.barchart == "horizontal"){
theplot <- theplot + coord_flip()
angle <- 0
}
if (rlang::quo_is_null(infimum_error) | rlang::quo_is_null(supremum_error)) {
warning("Could not find the min or max column. No error bars will be added to the barchart")
}
# Add error bar to the plot
theplot <- errorbar_impact(theplot, measure = x,
lower_limit = infimum_error,
upper_limit = supremum_error,
text_angle = angle)
debug(errorbar_impact)
# Add error bar to the plot
theplot <- errorbar_impact(theplot, measure = x,
lower_limit = infimum_error,
upper_limit = supremum_error,
text_angle = angle)
# Check cut error bar if less than 0
lower_limit_list <- lapply(rlang::eval_tidy(lower_limit, .data), function(x)if(x < 0){x = 0}else{x = x })
rlang::eval_tidy(lower_limit, .data)
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
undebug(barchart_impact)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 20,size_max_label = 60 )
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
output <- readRDS("../tests/testthat/output_hypegrammaR.RDS")
vec = 1:29
output$results[[5]]$parameters$case
for(i in c(5:8,20:25)){ i=5
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 20,size_max_label = 60 )
plot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
ggsave(paste0(as.character(i),"plot.jpg"))
}
source('~/GitHub/visualisationIMPACT/R/impact_style.R')
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
sens<- orientation_plot(result, region, 10, 10)
sens
sens <- orientation_plot(result, region, 20, 10)
sens
sens <- orientation_plot(result, region, 20, 30)
sens
browseVignettes("visualisationIMPACT")
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
# remotes::install_github("sharonorengo/visualisationIMPACT",build_opts = c())
# install.packages("extrafont")
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/utilities.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
#' Use geom_bar function with pre_fill arguments
#'
#' @details stat and position arguments are predifined as "identity" and "dodge"
#' @return geom_bar function pre-fill
#' @export
geom_errorbar_impact <- purrr::partial(ggplot2::geom_errorbar,
position=position_dodge(width=0.9),
stat='identity',
width=.1)
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(50,50, 30, 70, 45,55, 90,10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE )
regions.value="capitalcentral"
median_value=20
first_quantile <- 5
third_quantile <- 30
min_value <- 2.5
max_value <- 80
outliers_min <- 1
outliers_max <- NA
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
theplot + ggtitle("example barchart average")
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- c(5,30,90, 10) - 1.5
max_value <- c(30,70, 130,50) + 50
outliers_min <- c(1,NA,70, 5)
outliers_max <- c(NA,150, 200,120)
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
theplot + ggtitle("example barchart average")
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE))
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.70, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
debug(grouped_barchart_impact)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
x <- enquo(x)
subset.x <- enquo(subset.x)
y <- enquo(y)
infimum_error <- enquo(infimum_error)
supremum_error <- enquo(supremum_error)
# Create ggplot
theplot <- ggplot(.data, aes(x = !!x,y = (!!y)*scale.percent, fill = !!subset.x)) + geom_bar_impact() +
theme_impact() + labs( x = NULL, y = NULL) + scale_fill_reach_categorical(n=nrow(dplyr::distinct(.data,!!subset.x)),name="")
scale.percent
# Create ggplot
theplot <- ggplot(.data, aes(x = !!x,y = (!!y)*scale.percent, fill = !!subset.x)) + geom_bar_impact() +
theme_impact() + labs( x = NULL, y = NULL) + scale_fill_reach_categorical(n=nrow(dplyr::distinct(.data,!!subset.x)),name="")
# Add values
theplot <- add_stat_to_barchart(theplot, x, y , scale.percent, percent)
debug(add_stat_to_barchart)
# Add values
theplot <- add_stat_to_barchart(theplot, x, y , scale.percent, percent)
label.y = function(x){paste(round(x, digits = 2),"%")}
label.y = function(x){round(x, digits = 2)}
theplot <- theplot + geom_text(aes(x = !!x, y = max((!!y)*scale.percent)+ 5, label = label.y(!!y)), position = position_dodge(width=0.9))
ax((!!y)*scale.percent)
max((!!y)*scale.percent)
theplot + geom_text(aes(x = !!x, y = max((!!y)*scale.percent)+ 5, label = label.y(!!y)), position = position_dodge(width=0.9))
label.y = function(x){round(x, digits = 2)}
label.y(!!y)
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.70, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
undebug(grouped_barchart_impact)
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.70, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.70, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
source('~/GitHub/visualisationIMPACT/R/utilities.R')
remotes::install_github("sharonorengo/visualisationIMPACT",build_opts = c())
sens<- orientation_plot(result, region, 10, 20)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE)
result
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
sens<- orientation_plot(result, region, 10, 20)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE)
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100)
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE)
result$average <- c(0.5,0.50, 0.30, 0.70)
result
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8)
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100)
barchart_impact(.data = result, x = region, y = average, infimum_error = NULL, supremum_error = NULL, sens.barchart = sens, percent = TRUE, scale.percent = 100)
barchart_impact(.data = result, x = region, y = average, infimum_error = NULL, supremum_error = NULL, sens.barchart = sens, percent = TRUE, scale.percent = 100)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
debug(barchart_impact)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
x <- enquo(x)
y<-enquo(y)
infimum_error <- enquo(infimum_error)
supremum_error<-enquo(supremum_error)
# Check and return message if empty evironnement
stop_msg <- error_message_empty_env_barchart( x,subset.x = NULL, y, infimum_error, supremum_error)
if(stop_msg != ""){
stop(paste0("The variable(s) following does not exist in .data: ",stop_msg))
}
stop_msg
debug(error_message_empty_env_barchart)
# Check and return message if empty evironnement
stop_msg <- error_message_empty_env_barchart( x,subset.x = NULL, y, infimum_error, supremum_error)
# Check and return message if empty environment
stop_msg <- ""
if( check_empty_env(x) == TRUE){ stop_msg <- paste0(stop_msg , rlang::get_expr(x)) }
if(is.null(subset.x) == FALSE){if( check_empty_env(subset.x) == TRUE){ stop_msg <- paste(stop_msg , rlang::get_expr(subset.x)) }}
# Check and return message if empty environment
stop_msg <- ""
if( check_empty_env(x) == TRUE){ stop_msg <- paste0(stop_msg , rlang::get_expr(x)) }
if(is.null(subset.x) == FALSE){if( check_empty_env(subset.x) == TRUE){ stop_msg <- paste(stop_msg , rlang::get_expr(subset.x)) }}
if( check_empty_env(y) == TRUE ){ stop_msg <- paste(stop_msg , rlang::get_expr(y)) }
if( check_empty_env(infimum_error) == TRUE ){ stop_msg <- paste(stop_msg , rlang::get_expr(infimum_error)) }
check_empty_env(infimum_error) == TRUE
infimum_error
rlang::get_expr(infimum_error)
rlang::get_expr(infimum_error!= NULL
rlang::get_expr(infimum_error)!= NULL
rlang::quo_is_null(infimum_error)== TRUE
if( check_empty_env(infimum_error) == TRUE & rlang::quo_is_null(infimum_error)!= TRUE){ stop_msg <- paste(stop_msg , rlang::get_expr(infimum_error)) }
if( check_empty_env(supremum_error) == TRUE & rlang::quo_is_null(infimum_error)!= TRUE){ stop_msg <- paste(stop_msg , rlang::get_expr(supremum_error)) }
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
undebug(barchart_impact)
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")  ##to compile before showing graph
sens <- orientation_plot(result, region, 10, 10)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = FALSE)
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 1)
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
source('~/GitHub/visualisationIMPACT/R/utilities.R')
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
source('~/GitHub/visualisationIMPACT/R/utilities.R')
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
n
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.70, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = TRUE, scale.percent = 100 )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = FALSE )
regions.value="capitalcentral"
median_value=20
first_quantile <- 5
third_quantile <- 30
min_value <- 2.5
max_value <- 80
outliers_min <- 1
outliers_max <- NA
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
theplot + ggtitle("example barchart average")
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- c(5,30,90, 10) - 1.5
max_value <- c(30,70, 130,50) + 50
outliers_min <- c(1,NA,70, 5)
outliers_max <- c(NA,150, 200,120)
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
theplot + ggtitle("example barchart average")
grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="horizontal", percent = FALSE )
