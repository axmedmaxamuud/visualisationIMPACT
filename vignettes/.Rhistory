geom_label(aes(x = 1.17, y = ggplot_output[["quartiles"]],
label = names(ggplot_output[["quartiles"]])),
vjust = c(0.4,0.85,0.4),
fill = "white", label.size = 0) +
ylab("") + xlab("") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
aspect.ratio = 4/3,
plot.title = element_text(hjust = 0.5, size = 10)) +
coord_cartesian(xlim = c(1.4,3.1), ylim = c(-600, 900)) +
labs(title = "EXPLANATION")
ggplot() +
stat_boxplot(data = sample_df,
aes(x = parameter, y=values),
geom ='errorbar', width = 0.3)
ggplot() +
stat_boxplot(data = sample_df,
aes(x = parameter, y=values),
geom ='errorbar', width = 0.3) +
geom_boxplot(data = sample_df,
aes(x = parameter, y=values),
width = 0.3, fill = "lightgrey")
sample_df$values
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
outlier <- c(c(20,30),70, 130,50)
outlier
result_box
result_box[["outliers"]]
result_box$outliers[1]
result_box$outliers[1] <- c(130,5)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
library(gridExtra)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
source('~/GitHub/visualisationIMPACT/R/impact_style.R')
source('~/GitHub/visualisationIMPACT/R/reach_color.R')
source('~/GitHub/visualisationIMPACT/R/regression_plot.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/scale_plot.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")
1
sens <- orientation_plot(result, region, 10, 10)
result$min <- c(2,2,5,3,NA,3,3)
barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = "vertical", percent = TRUE, scale.percent = 1)
ggsave(filename = "test.jpg", plot = last_plot(), width = 6, height = 4, units = "cm")
library(grid)
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
theplot <- barchart_impact(.data = result, x = region, y = average, sens.barchart = "horizontal", percent = TRUE, scale.percent = 100)
theplot$children
ggsave(filename = "test4.jpg", plot = theplot, width = 20, height = 4, units = "cm")
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = FALSE )
# Check if ...
ggplot_object <- theplot
if(is.null(ggplot_object)){ #| !ggplot2::is.ggplot(ggplot_object) objet grid.arrange -> verifier la class
stop("Please enter a valid value to ggplot_object parameter. It has to be a ggplot object.")
}
if(is.null(filename) | !is.character(filename)){
stop("Please enter a valid value to filename parameter.")
}
if(!("ggsave_parameters" %in% names(attributes(ggplot_object)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
filename <- "test9.jpg"
if(is.null(ggplot_object)){ #| !ggplot2::is.ggplot(ggplot_object) objet grid.arrange -> verifier la class
stop("Please enter a valid value to ggplot_object parameter. It has to be a ggplot object.")
}
if(is.null(filename) | !is.character(filename)){
stop("Please enter a valid value to filename parameter.")
}
if(!("ggsave_parameters" %in% names(attributes(ggplot_object)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
ggsave_parameters<-attributes(ggplot_object)$ggsave_parameters
if(!("num_bar" %in% names(ggsave_parameters))){
stop("Can not find number of element in plot")
}
if(!("direction_plot" %in% names(ggsave_parameters))){
stop("Can not find orientation of the plot")
}
num_element <- attributes(ggplot_object)$ggsave_parameters$num_bar #bar ou boxplot
direction_plot <- attributes(ggplot_object)$ggsave_parameters$direction_plot
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", num_element, direction_plot)
direction_plot
num_element
as.numeric(num_element)
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
source('~/GitHub/visualisationIMPACT/R/save_file.R')
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
direction_plot
direction_plot[1]
str(direction_plot)
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
direction_plot != "vertical"
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
source('~/GitHub/visualisationIMPACT/R/save_file.R')
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
list_size
source('~/GitHub/visualisationIMPACT/R/save_file.R')
ggsave_parameters <- list(width = list_size$width, height = list_size$height, plot = ggplot_object, filename = filename, path = path, units = "cm")
path = "./"
source('~/GitHub/visualisationIMPACT/R/save_file.R')
ggsave_parameters <- list(width = list_size$width, height = list_size$height, plot = ggplot_object, filename = filename, path = path, units = "cm")
getwd()
source('~/GitHub/visualisationIMPACT/R/save_file.R')
#' Save ggplot object with fixed size
#'
#' @param ggplot_object: a ggplot object to save
#' @param filename: File name containing an extension (.jpg, .pdf, ...)
#' @param path (optional): Set by default to the current folder
#' @param ... other arguments passed to ggplot2::ggsave()
#' @export
#'
save_graph_FS <- function(ggplot_object, filename, path = "./", ... ){
# Check if ...
ggplot_object <- theplot
filename <- "test9.jpg"
if(is.null(ggplot_object)){ #| !ggplot2::is.ggplot(ggplot_object) objet grid.arrange -> verifier la class
stop("Please enter a valid value to ggplot_object parameter. It has to be a ggplot object.")
}
if(is.null(filename) | !is.character(filename)){
stop("Please enter a valid value to filename parameter.")
}
if(!("ggsave_parameters" %in% names(attributes(ggplot_object)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
ggsave_parameters<-attributes(ggplot_object)$ggsave_parameters
if(!("num_bar" %in% names(ggsave_parameters))){
stop("Can not find number of element in plot")
}
if(!("direction_plot" %in% names(ggsave_parameters))){
stop("Can not find orientation of the plot")
}
num_element <- attributes(ggplot_object)$ggsave_parameters$num_bar #bar ou boxplot
direction_plot <- attributes(ggplot_object)$ggsave_parameters$direction_plot
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
## TO DO gerer cette partie
# params_passed<-list(...)
# TO DO !!! ... overwrite ggsave parameters if passed through ... ???
ggsave_parameters <- list(width = list_size$width, height = list_size$height, plot = ggplot_object, filename = filename, path = path, units = "cm")
do.call(ggsave, ggsave_parameters)
return(invisible(ggplot_object))
}
source('~/GitHub/visualisationIMPACT/R/save_file.R')
ggsave_parameters <- list(width = list_size$width, height = list_size$height, plot = ggplot_object, filename = filename, path = path, units = "cm")
setwd("~/GitHub/visualisationIMPACT/vignettes/detailed_example_files")
ggsave_parameters <- list(width = list_size$width, height = list_size$height, plot = ggplot_object, filename = filename, path = path, units = "cm")
do.call(ggsave, ggsave_parameters)
extrafont::loadfonts(device="win")
setwd("~/GitHub/visualisationIMPACT/vignettes")
do.call(ggsave, ggsave_parameters)
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = FALSE )
ggplot_object <- theplot
filename <- "test10.jpg"
if(is.null(ggplot_object)){ #| !ggplot2::is.ggplot(ggplot_object) objet grid.arrange -> verifier la class
stop("Please enter a valid value to ggplot_object parameter. It has to be a ggplot object.")
}
if(is.null(filename) | !is.character(filename)){
stop("Please enter a valid value to filename parameter.")
}
if(!("ggsave_parameters" %in% names(attributes(ggplot_object)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
ggsave_parameters<-attributes(ggplot_object)$ggsave_parameters
if(!("num_bar" %in% names(ggsave_parameters))){
stop("Can not find number of element in plot")
}
if(!("direction_plot" %in% names(ggsave_parameters))){
stop("Can not find orientation of the plot")
}
num_element <- attributes(ggplot_object)$ggsave_parameters$num_bar #bar ou boxplot
direction_plot <- attributes(ggplot_object)$ggsave_parameters$direction_plot
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot)
## TO DO gerer cette partie
# params_passed<-list(...)
# TO DO !!! ... overwrite ggsave parameters if passed through ... ???
ggsave_parameters <- list(width = list_size$width, height = list_size$height, plot = ggplot_object, filename = filename, path = path, units = "cm")
do.call(ggsave, ggsave_parameters)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 10,size_max_label = 10)
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 10,size_max_label = 10)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library(extrafont)
library(ggplot2)
library(gridExtra)
library(grid)
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 10,size_max_label = 10)
result$min <- c(2,2,5,3,NA,3,3)
theplot <- barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 1)
save_graph(ggplot_object = theplot, filename = "test1.jpg", path = "./" )
source('~/GitHub/visualisationIMPACT/R/impact_style.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/checking_utilities.R')
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 10,size_max_label = 10)
result$min <- c(2,2,5,3,NA,3,3)
theplot <- barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 1)
save_graph(ggplot_object = theplot, filename = "test1.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test1_report.jpg", path = "./", type.output = "report" )
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
theplot <- barchart_impact(.data = result, x = region, y = average, sens.barchart = sens, percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = "test2.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test2_report.jpg", path = "./", type.output = "report" )
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 6, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test3_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
save_graph(ggplot_object = theplot, filename = "test4.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test4_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
## legende trop grande
save_graph(ggplot_object = theplot, filename = "test5.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test5_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 13,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
save_graph(ggplot_object = theplot, filename = "test4.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test4_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
## legende trop grande
save_graph(ggplot_object = theplot, filename = "test5.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test5_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 12,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
save_graph(ggplot_object = theplot, filename = "test4.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test4_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
## legende trop grande
save_graph(ggplot_object = theplot, filename = "test5.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test5_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test3_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test3_report.jpg", path = "./", type.output = "report" )
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test3_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 12,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
save_graph(ggplot_object = theplot, filename = "test4.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test4_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
## legende trop grande
save_graph(ggplot_object = theplot, filename = "test5.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test5_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 12,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
save_graph(ggplot_object = theplot, filename = "test4.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test4_report.jpg", path = "./", type.output = "report" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
sens <- orientation_plot(.data = result, x.label = region ,max_nbr_var = 6,size_max_label = 10)
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = FALSE )
## legende trop grande
save_graph(ggplot_object = theplot, filename = "test5.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test5_report.jpg", path = "./", type.output = "report" )
source('~/GitHub/visualisationIMPACT/R/save_file.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test3_report.jpg", path = "./", type.output = "report" )
source('~/GitHub/visualisationIMPACT/R/save_file.R')
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
save_graph(ggplot_object = theplot, filename = "test3_report.jpg", path = "./", type.output = "report" )
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 10,size_max_label = 12)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_FS.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_report.jpg"), path = "./", type.output = "report" )
}
output <- readRDS("../tests/testthat/output_hypegrammaR.RDS")
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 10,size_max_label = 12)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_FS.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_report.jpg"), path = "./", type.output = "report" )
}
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 10,size_max_label = 30)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_FS.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_report.jpg"), path = "./", type.output = "report" )
}
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 10,size_max_label = 25)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_FS.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_report.jpg"), path = "./", type.output = "report" )
}
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 10,size_max_label = 20)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_FS.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_report.jpg"), path = "./", type.output = "report" )
}
devtools::document()
devtools::load_all()
devtools::build()
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
devtools::build()
devtools::install()
data <- output$results[[1]]$summary.statistic
data
data$dependent.var
data$dependent.var.value <-
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12)
data$dependent.var.value
dependent.var.value
data$dependent.var.value
data <- output$results[[1]]$summary.statistic
data
data$dependent.var.value
data$dependent.var.value <- gsub("priorityproblems.", "", data$dependent.var.value)
data$dependent.var.value
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_FS.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(i),"plot_report.jpg"), path = "./", type.output = "report" )
}
data <- output$results[[1]]$summary.statistic
data$dependent.var.value <- gsub("priorityproblems.", "", data$dependent.var.value)
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph(ggplot_object = theplot, filename = paste0(as.character(1),"plot_FS_bis.jpg"), path = "./" , type.output = "FS")
save_graph(ggplot_object = theplot, filename = paste0(as.character(1),"plot_report_bis.jpg"), path = "./", type.output = "report" )
