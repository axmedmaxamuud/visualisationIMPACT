source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
sens_barchart <- adapt_scale_plot_cat_num(result, region)
sens_barchart
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
sens_barchart <- adapt_scale_plot_cat_num(result, region)
sens_barchart
debug(sens_barchart)
debug(adapt_scale_plot_cat_num)
sens_barchart <- adapt_scale_plot_cat_num(result, region)
independent.var <- enquo(independent.var)
independent.var.value <- dplyr::select(.data, !!independent.var)
nbre_bars <- nrow(independent.var.value)
#si trop de var à afficher ou si lable trop long
list_size_char_label <- nchar(levels(independent.var.value))
independent.var.value
levels(independent.var.value)
independent.var.value
View(independent.var.value)
independent.var.value
select(independent.var.value, independent.var)
str(independent.var.value)
undebug(adapt_scale_plot_cat_num)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
sens_barchart <- adapt_scale_plot_cat_num(result, region)
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
sens_barchart <- adapt_scale_plot_cat_num(result, region)
sens_barchart
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
sens_barchart <- adapt_scale_plot_cat_num(result, region)
sens_barchart
debug(adapt_scale_plot_cat_num)
sens_barchart <- adapt_scale_plot_cat_num(result, region)
independent.var <- enquo(independent.var)
independent.var.value <- dplyr::select(.data, !!independent.var)
nbre_bars <- nrow(independent.var.value)
#si trop de var à afficher ou si lable trop long
list_size_char_label <- nchar(levels(independent.var.value[1,]))
independent.var.value[1,]
a <- independent.var.value[1,]
a <- independent.var.value[,1]
a <- nchar(independent.var.value[,1])
lapply(independent.var.value[,1], function(x) return(nchar(x)))
a <- independent.var.value[,1]
names(a)
levels(a)
values(a)
nchar(a)
as.character(a)
View(a)
a$region
levels(a$region)
nchar(levels(a$region))
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
undebug(adapt_scale_plot_cat_num)
sens_barchart <- adapt_scale_plot_cat_num(result, region)
sens_barchart
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
sens_barchart <- adapt_scale_plot_cat_num(result, region)
barchart_average(result, region,sens_barchart, average, min, max)
library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
barchart_average(result, region,sens_barchart, average, min, max)
devtools::build()
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::build()
devtools::build()
devtools::load_all()
devtools::document()
devtools::test()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::build()
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::build()
devtools::load_all()
devtools::document()
barchart_average(result, region,sens_barchart, average, min, max)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
barchart_average(result, region,sens_barchart, average, min, max)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
barchart_average(result, region,sens_barchart, average, min, max)
source('~/GitHub/visualisationIMPACT/package_building.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
devtools::build()
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::build()
devtools::load_all()
devtools::document()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::build()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
source('~/GitHub/visualisationIMPACT/R/error_bar.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
max_value <- result_percent+5
first_quantile <- c(5,30,90, 10)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- first_quantile - 1.5*(third_quantile-first_qantile)
max_value <- third_quantile + 1.5*(third_quantile-first_qantile)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
max_value <- third_quantile + 1.5*(third_quantile-first_quantile)
result_box <- data.frame(region=regions.value, median=median_value, first_quantile, third_quantile, min, max)
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value)
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
devtools::build()
devtools::load_all()
devtools::document()
devtools::test()
devtools::install()
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
debug(boxplot_impact)
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
geom_boxplot(aes( ymin = !!min, lower = !!first_quantile, middle = !!median, upper = !!third_quantile, ymax = !!max ),stat = "identity")
undebug(boxplot_impact)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
result_box
debug(boxplot_impact)
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median, first_quantile = quantile(probs=0.25),third_quantile=quantile(probs=0.75),min=min,max=max))
head(data)
independent.var <- "region"
dependent.var <- "cashincome"
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median, first_quantile = quantile(probs=0.25),third_quantile=quantile(probs=0.75),min=min,max=max))
data %>% dplyr::select(c( independent.var , dependent.var))
data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var)
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median))
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,min=min,max=max))
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,first_quantile = quantile, min=min,max=max))
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,first_quantile = quantile(x,probs=0.25),third_quantile=quantile(x,probs=0.75)min=min,max=max))
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,first_quantile = quantile(x,probs=0.25),third_quantile=quantile(x,probs=0.75),min=min,max=max))
quantile(data$cashincome)
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,first_quantile = quantile(probs=0.25, na.rm = T),third_quantile=quantile(probs=0.75, na.rm=T),min=min,max=max))
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,min=min,max=max))
result_box
result_box <- data.frame(result_box, first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500), third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000))
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
devtools::build()
devtools::build()
usethis::use_vignette("detailed_example")
sens_barchart <- adapt_scale_plot_cat_num(result, region)
library("visualisationIMPACT")
sens_barchart <- adapt_scale_plot_cat_num(result, region)
source('~/GitHub/visualisationIMPACT/R/scale_barchart.R')
library(devtools)
devtools::build()
barchart_average(result, region,"vertical", average, min, max)
install()
visualisationIMPACT::barchart_average(result, region,"vertical", average, min, max)
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::load_all()
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::load_all()
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
devtools::load_all()
devtools::build()
devtools::document()
devtools::build()
devtools::install()
devtools::build()
source('~/GitHub/visualisationIMPACT/package_building.R')
devtools::document()
devtools::load_all()
devtools::build()
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
devtools::document()
independent.var <- enquo(independent.var)
#' @param .data: dataframe that contains the result for the barchart
#' @param independent.var.value: column of the dataframe .data thta contains the different values of the categorical data
#' @param result_average: a column of the dataframe .data containing for each categorical value the average associated
#' @param result_min optional: a column of the dataframe .data containing for each categorical value the lower limit value for the error bars
#' @param result_max optional: a column of the dataframe .data containing for each categorical value the upper limit value for the error bars
#' @param resultat_avarage: data.frame of two column where the first is the values of the independent var and the second column is the average associated to the indepedent variable value
#' @details Searches for ....
#' @return a ggplot object
#' @examples  ...
#' @export
boxplot_impact <- function(.data, independent.var, dependent.var, median, first_quantile, third_quantile, min, max){
independent.var <- enquo(independent.var)
median <- enquo(median)
first_quantile <- enquo(first_quantile)
third_quantile <- enquo(third_quantile)
min <- enquo(min)
max <- enquo(max)
theplot <- ggplot(.data, aes(1)) +
geom_boxplot(aes( ymin = !!min, lower = !!first_quantile, middle = !!median, upper = !!third_quantile, ymax = !!max ),stat = "identity")
return(theplot)
}
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
result_box <- data.frame(result_box, first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500), third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000))
independent.var <- "region"
dependent.var <- "cashincome"
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,min=min,max=max))
independent.var <- "region"
dependent.var <- "cashincome"
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,min=min,max=max))
data<-read.csv("../tests/testthat/testdata.csv")
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,min=min,max=max))
result_box <- data.frame(result_box, first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500), third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000))
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region , median, first_quantile, third_quantile, min, max)
result_box
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region , median, min, max, first_quantile, third_quantile)
debug(boxplot_impact)
boxplot_impact(result_box, region , median, min, max, first_quantile, third_quantile)
independent.var <- enquo(independent.var)
median <- enquo(median)
first_quantile <- enquo(first_quantile)
third_quantile <- enquo(third_quantile)
min <- enquo(min)
max <- enquo(max)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
result_box
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
result_box
result_box <- result_box[1,]
result_box
result_box <- result_box[1:7,]
result_box <- data.frame(result_box, first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500), third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000))
result_box2 <- result_box[1:7,]
result_box2
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median,min=min,max=max))
result_box <- data.frame(result_box, first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500), third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000))
result_box
result_box2 <- result_box[1:7,]
result_box2
result_box2 <- result_box[c(2,4:7,]
result_box2 <- result_box[c(2,4:7),]
boxplot_impact(result_box2, region, "cashincome", median, min, max, first_quantile, third_quantile)
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median))
result_box <- data.frame(result_box, first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500), third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000))
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
max_value <- third_quantile + 1.5*(third_quantile-first_quantile)
first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500)
third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000)
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
max_value <- third_quantile + 1.5*(third_quantile-first_quantile)
result_box <- data.frame(result_box, first_quantile = first_quantile, third_quantile = third_quantile)
result_box <- data.frame(result_box, first_quantile = first_quantile, third_quantile = third_quantile)
result_box
result_box <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c( median = median))
first_quantile = c(NA,4000, 1000,2000, 4000, 7500, 3500)
third_quantile = c(NA,10000, 50000, 10000, 10000, 14000, 6000)
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
max_value <- third_quantile + 1.5*(third_quantile-first_quantile)
result_box <- data.frame(result_box, first_quantile = first_quantile, third_quantile = third_quantile)
result_box
min_value
third_quantile-first_quantile
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
min_value
result_box
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
max_value <- third_quantile + 1.5*(third_quantile-first_quantile)
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value)
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
max_value <- third_quantile + 1.5*(third_quantile-first_quantile)
min_value <- first_quantile - 1.5*(third_quantile-first_quantile)
View(result_box2)
View(result_box)
max_value
min_value
min_value <- first_quantile - 1.5
max_value <- third_quantile + 5
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = c( c(1,50), NA, NA, c(160) )
result_box
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = c( c(1,50), NA, NA, c(160)))
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = list( c(1,50), NA, NA, c(160)))
result_box
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- first_quantile - 1.5
max_value <- third_quantile + 5
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = list( c(1,50), NA, NA, c(160)))
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- first_quantile - 1.5
max_value <- third_quantile + 5
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = list( c(1,50), NA, NA, c(160)))
result_box
outlier <- max_value+10
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = outlier )
result_box
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- first_quantile - 1.5
max_value <- third_quantile + 50
outlier <- max_value+10
result_box <- data.frame(region=regions.value, median=median_value, first_quantile = first_quantile, third_quantile = third_quantile, min= min_value, max = max_value, outliers = outlier )
independent.var <- "region"
dependent.var <- "cashincome"
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outliers = outlier )
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- c(5,30,90, 10) - 1.5
max_value <- c(30,70, 130,50) + 50
outlier <- c(30,70, 130,50)+100
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outliers = outlier )
independent.var <- "region"
dependent.var <- "cashincome"
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
ggplot(data, aes("region", "cashincome"))
data<-read.csv("../tests/testthat/testdata.csv")
ggplot(data, aes("region", "cashincome"))
ggplot(data, aes(region, cashincome))
ggplot(data, aes(region, cashincome)) + geom_boxplot()
plot <- ggplot(data, aes(region, cashincome)) + geom_boxplot()
plot$layers
plot$mapping
plot$coordinates
plot$plot_env
plot$labels
plot$facet
debug(geom_boxplot)
plot <- ggplot(data, aes(region, cashincome)) + geom_boxplot()
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
undebug(geom_boxplot)
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
set.seed(100)
sample_df <- data.frame(parameter = "test",
values = sample(500))
# Extend the top whisker a bit:
sample_df$values[1:100] <- 701:800
# Make sure there's only 1 lower outlier:
sample_df$values[1] <- -350
sample_df
ggplot2_boxplot <- function(x){
quartiles <- as.numeric(quantile(x,
probs = c(0.25, 0.5, 0.75)))
names(quartiles) <- c("25th percentile",
"50th percentile\n(median)",
"75th percentile")
IQR <- diff(quartiles[c(1,3)])
upper_whisker <- max(x[x < (quartiles[3] + 1.5 * IQR)])
lower_whisker <- min(x[x > (quartiles[1] - 1.5 * IQR)])
upper_dots <- x[x > (quartiles[3] + 1.5*IQR)]
lower_dots <- x[x < (quartiles[1] - 1.5*IQR)]
return(list("quartiles" = quartiles,
"25th percentile" = as.numeric(quartiles[1]),
"50th percentile\n(median)" = as.numeric(quartiles[2]),
"75th percentile" = as.numeric(quartiles[3]),
"IQR" = IQR,
"upper_whisker" = upper_whisker,
"lower_whisker" = lower_whisker,
"upper_dots" = upper_dots,
"lower_dots" = lower_dots))
}
ggplot_output <- ggplot2_boxplot(sample_df$values)
ggplot_output
}
explain_plot <- ggplot() +
stat_boxplot(data = sample_df,
aes(x = parameter, y=values),
geom ='errorbar', width = 0.3) +
geom_boxplot(data = sample_df,
aes(x = parameter, y=values),
width = 0.3, fill = "lightgrey") +
geom_text(aes(x = 1, y = 950, label = "500"), hjust = 0.5) +
geom_text(aes(x = 1.17, y = 950,
label = "Number of values"),
fontface = "bold", vjust = 0.4) +
theme_minimal(base_size = 5, base_family = family) +
geom_segment(aes(x = 2.3, xend = 2.3,
y = ggplot_output[["25th percentile"]],
yend = ggplot_output[["75th percentile"]])) +
geom_segment(aes(x = 1.2, xend = 2.3,
y = ggplot_output[["25th percentile"]],
yend = ggplot_output[["25th percentile"]])) +
geom_segment(aes(x = 1.2, xend = 2.3,
y = ggplot_output[["75th percentile"]],
yend = ggplot_output[["75th percentile"]])) +
geom_text(aes(x = 2.4, y = ggplot_output[["50th percentile\n(median)"]]),
label = "Interquartile\nrange", fontface = "bold",
vjust = 0.4) +
geom_text(aes(x = c(1.17,1.17),
y = c(ggplot_output[["upper_whisker"]],
ggplot_output[["lower_whisker"]]),
label = c("Largest value within 1.5 times\ninterquartile range above\n75th percentile",
"Smallest value within 1.5 times\ninterquartile range below\n25th percentile")),
fontface = "bold", vjust = 0.9) +
geom_text(aes(x = c(1.17),
y =  ggplot_output[["lower_dots"]],
label = "Outside value"),
vjust = 0.5, fontface = "bold") +
geom_text(aes(x = c(1.9),
y =  ggplot_output[["lower_dots"]],
label = "-Value is >1.5 times and"),
vjust = 0.5) +
geom_text(aes(x = 1.17,
y = ggplot_output[["lower_dots"]],
label = "<3 times the interquartile range\nbeyond either end of the box"),
vjust = 1.5) +
geom_label(aes(x = 1.17, y = ggplot_output[["quartiles"]],
label = names(ggplot_output[["quartiles"]])),
vjust = c(0.4,0.85,0.4),
fill = "white", label.size = 0) +
ylab("") + xlab("") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
aspect.ratio = 4/3,
plot.title = element_text(hjust = 0.5, size = 10)) +
coord_cartesian(xlim = c(1.4,3.1), ylim = c(-600, 900)) +
labs(title = "EXPLANATION")
ggplot() +
stat_boxplot(data = sample_df,
aes(x = parameter, y=values),
geom ='errorbar', width = 0.3)
ggplot() +
stat_boxplot(data = sample_df,
aes(x = parameter, y=values),
geom ='errorbar', width = 0.3) +
geom_boxplot(data = sample_df,
aes(x = parameter, y=values),
width = 0.3, fill = "lightgrey")
sample_df$values
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
boxplot_impact(result_box, region, "cashincome", median, min, max, first_quantile, third_quantile, outliers)
outlier <- c(c(20,30),70, 130,50)
outlier
result_box
result_box[["outliers"]]
result_box$outliers[1]
result_box$outliers[1] <- c(130,5)
source('~/GitHub/visualisationIMPACT/R/boxplot_functions.R')
